{"ast":null,"code":"var _jsxFileName = \"E:\\\\PlayerPlusPlus\\\\player-plus-plus\\\\src\\\\components\\\\post-page.component.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport NavBar from \"./navbar.component\";\nimport \"./style-sheets/postpage.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst Post = props => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"postPost\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"postPostHeader\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"postHeaderCircle\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  style: {\n    height: '50px',\n    width: '50px',\n    backgroundImage: `url(${require(`./style-sheets/pics/profilePic.png`)})`\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: \"postPosterName\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, props.post.name, React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"postPostDate\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, props.post.date.split(\"T\")[0])), React.createElement(\"div\", {\n  className: \"postPlatformIcon\",\n  style: {\n    display: props.post.platform == \"noPlatform\" ? \"none\" : \"block\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  style: {\n    height: \"25px\",\n    width: \"25px\",\n    backgroundImage: props.post.platform == \"noPlatform\" ? \"url()\" : `url(${require(`./style-sheets/pics/PlatformPics/${props.post.platform}.png`)})`\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}))), React.createElement(\"div\", {\n  className: \"postContentBox\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"postContentText\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, props.post.message), React.createElement(\"hr\", {\n  className: \"postReplyOptionsDivider\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"replyOptions\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  type: \"button\",\n  \"data-toggle\": \"\",\n  \"data-target\": \"\",\n  className: \"postQuickReplyButton\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, \"Quick Reply\"), React.createElement(\"button\", {\n  type: \"button\",\n  \"data-toggle\": \"modal\",\n  \"data-target\": \"#replyModal\",\n  className: \"replyButton\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, \"Reply\")))));\n\nconst Reply = props => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"repliesContainter\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"reply\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"replyHeader\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"replyHeaderCircle\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"replyName\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, props.reply.name, React.createElement(\"br\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"replyDate\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, props.reply.date.split(\"T\")[0])))), React.createElement(\"div\", {\n  className: \"replyContentBox\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"replyContentText\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, props.reply.message))));\n\nclass PostPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n      console.log(replyContent);\n    };\n\n    this.state = this.getInitialState();\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    axios.get('/posts/getpost/' + this.props.location.id).then(res => {\n      var postComp = React.createElement(Post, {\n        post: res.data,\n        key: res.data._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n      this.setPostComp(postComp);\n      this.setPostInfo(res.data);\n      this.getReplies(res.data._id);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  getReplies(postId) {\n    axios.get('/replies/' + postId).then(res => {\n      console.log(res.data);\n      this.setReplies(res.data.reverse());\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  setPostComp(post) {\n    console.log(\"In setPostComp: \" + post);\n    localStorage.setItem('PostComp', JSON.stringify(post));\n    this.setState({\n      postComp: post\n    });\n  }\n\n  setPostInfo(postInfo) {\n    localStorage.setItem('PostInfo', JSON.stringify(postInfo));\n    this.setState({\n      postInfo: postInfo\n    });\n  }\n\n  setReplies(replies) {\n    localStorage.setItem('Replies', JSON.stringify(replies));\n    this.setState({\n      replies: replies\n    });\n  }\n\n  createReplies() {\n    return this.state.replies.map(currentReply => {\n      return React.createElement(Reply, {\n        reply: currentReply,\n        key: currentReply._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      });\n    });\n  }\n\n  getInitialState() {\n    /* var postComp = JSON.parse(localStorage.getItem('PostComp')) || [];\r\n    var postInfo = JSON.parse(localStorage.getItem('PostInfo')) || [];\r\n    var replies = JSON.parse(localStorage.getItem('Replies')) || []; */\n    var postComp = [];\n    var postInfo = [];\n    var replies = [];\n    var replyContent = \"\";\n    return {\n      postComp: postComp,\n      postInfo: postInfo,\n      replies: replies,\n      replyContent: replyContent\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal fade\",\n      id: \"replyModal\",\n      tabindex: \"-1\",\n      \"aria-labelledby\": \"replyModalLabel\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-dialog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-content\",\n      style: {\n        backgroundColor: \"#262525\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      class: \"modal-title\",\n      id: \"replyModalLabel\",\n      style: {\n        marginLeft: \"167px\",\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Write a Reply\")), React.createElement(\"div\", {\n      class: \"modal-body\",\n      style: {\n        color: \"white\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"form-control\",\n      \"aria-label\": \"ReplyBox\",\n      placeholder: \"Write a reply...\",\n      onChange: this.onChange,\n      value: this.state.replyContent,\n      id: \"replyContent\",\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn closeModalButton\",\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Close\"), React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn postReplyButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Post Reply\"))))), React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"postFeed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, this.state.postComp, React.createElement(\"div\", {\n      style: {\n        marginTop: \"-1px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      className: \"postReplyOptionsDivider2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), this.createReplies(), React.createElement(\"div\", {\n      className: \"replyFooter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nPostPage.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PostPage);","map":{"version":3,"sources":["E:/PlayerPlusPlus/player-plus-plus/src/components/post-page.component.js"],"names":["React","Component","axios","NavBar","PropTypes","connect","Post","props","height","width","backgroundImage","require","post","name","date","split","display","platform","message","Reply","reply","PostPage","constructor","onChange","e","setState","target","id","value","console","log","replyContent","state","getInitialState","componentDidMount","window","scrollTo","get","location","then","res","postComp","data","_id","setPostComp","setPostInfo","getReplies","catch","error","postId","setReplies","reverse","localStorage","setItem","JSON","stringify","postInfo","replies","createReplies","map","currentReply","render","backgroundColor","marginLeft","color","marginTop","propTypes","auth","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport NavBar from \"./navbar.component\";\r\nimport \"./style-sheets/postpage.css\"\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Post = props => (\r\n  <div>\r\n    <div className=\"postPost\">\r\n      <div className=\"postPostHeader\">\r\n        <div className=\"postHeaderCircle\">\r\n          <div style={{height: '50px', width: '50px', backgroundImage: `url(${require(`./style-sheets/pics/profilePic.png`)})`}}></div>\r\n        </div>\r\n        <div className=\"postPosterName\">\r\n          {props.post.name}\r\n          <br></br>\r\n          <div className=\"postPostDate\">{props.post.date.split(\"T\")[0]}</div>\r\n        </div>\r\n        <div className=\"postPlatformIcon\" style={{display: props.post.platform == \"noPlatform\" ? \"none\" : \"block\"}}>\r\n          <div style={{height: \"25px\", width: \"25px\", backgroundImage: props.post.platform == \"noPlatform\" ? \"url()\" : `url(${require(`./style-sheets/pics/PlatformPics/${props.post.platform}.png`)})`}}></div>\r\n        </div>\r\n      </div>\r\n      <div className=\"postContentBox\">\r\n        <div className=\"postContentText\">{props.post.message}</div>\r\n        <hr className=\"postReplyOptionsDivider\"></hr>\r\n        <div className=\"replyOptions\">\r\n          <button type=\"button\" data-toggle=\"\" data-target=\"\" className=\"postQuickReplyButton\">Quick Reply</button>\r\n          <button type=\"button\" data-toggle=\"modal\" data-target=\"#replyModal\" className=\"replyButton\">Reply</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst Reply = props => (\r\n  <div>\r\n    <div className=\"repliesContainter\">\r\n      <div className=\"reply\">\r\n        <div className=\"replyHeader\">\r\n          <div className=\"replyHeaderCircle\">\r\n            {/* <div style={{height: '40px', width: '40px', backgroundImage: `url(${require(`./style-sheets/pics/profilePic.png`)})`}}></div> */}\r\n          </div>\r\n          <div className=\"replyName\">\r\n            {props.reply.name}\r\n            <br></br>\r\n            <div className=\"replyDate\">{props.reply.date.split(\"T\")[0]}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"replyContentBox\">\r\n        <div className=\"replyContentText\">{props.reply.message}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nclass PostPage extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = this.getInitialState();\r\n  }\r\n\r\n  componentDidMount(){\r\n    window.scrollTo(0,0);\r\n    axios.get('/posts/getpost/' + this.props.location.id)\r\n      .then(res => {\r\n        var postComp = <Post post={res.data} key={res.data._id} />\r\n        this.setPostComp(postComp);\r\n        this.setPostInfo(res.data);\r\n        this.getReplies(res.data._id);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n    console.log(replyContent);\r\n  };\r\n\r\n  getReplies(postId){\r\n    axios.get('/replies/' + postId)\r\n    .then(res => {\r\n      console.log(res.data);\r\n      this.setReplies(res.data.reverse());\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  setPostComp(post) {\r\n    console.log(\"In setPostComp: \" + post);\r\n    localStorage.setItem('PostComp', JSON.stringify(post));\r\n    this.setState({postComp: post});\r\n  }\r\n\r\n  setPostInfo(postInfo) {\r\n    localStorage.setItem('PostInfo', JSON.stringify(postInfo));\r\n    this.setState({postInfo: postInfo});\r\n\r\n  }\r\n\r\n  setReplies(replies) {\r\n    localStorage.setItem('Replies', JSON.stringify(replies));\r\n    this.setState({replies: replies});\r\n  }\r\n\r\n  createReplies(){\r\n    return this.state.replies.map(currentReply =>{\r\n      return <Reply reply={currentReply} key={currentReply._id} />\r\n    })\r\n  }\r\n\r\n  getInitialState() {\r\n    /* var postComp = JSON.parse(localStorage.getItem('PostComp')) || [];\r\n    var postInfo = JSON.parse(localStorage.getItem('PostInfo')) || [];\r\n    var replies = JSON.parse(localStorage.getItem('Replies')) || []; */\r\n    var postComp = [];\r\n    var postInfo = [];\r\n    var replies = [];\r\n    var replyContent = \"\";\r\n\r\n    return {\r\n      postComp: postComp,\r\n      postInfo: postInfo,\r\n      replies: replies,\r\n      replyContent: replyContent\r\n    };\r\n  }\r\n \r\n  render(){\r\n    return(\r\n      <div>\r\n        <div class=\"modal fade\" id=\"replyModal\" tabindex=\"-1\" aria-labelledby=\"replyModalLabel\" aria-hidden=\"true\">\r\n          <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\" style={{backgroundColor: \"#262525\"}}>\r\n              <div class=\"modal-header\">\r\n                <h5 class=\"modal-title\" id=\"replyModalLabel\" style={{marginLeft: \"167px\", color: \"white\"}}>Write a Reply</h5>\r\n              </div>\r\n              <div class=\"modal-body\" style={{color: \"white\"}}>\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  aria-label=\"ReplyBox\" \r\n                  placeholder=\"Write a reply...\"\r\n                  onChange={this.onChange}\r\n                  value={this.state.replyContent}\r\n                  id=\"replyContent\"\r\n                  style={{color: \"black\"}}>\r\n                </textarea>\r\n              </div>\r\n              <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn closeModalButton\" data-dismiss=\"modal\">Close</button>\r\n                <button type=\"button\" class=\"btn postReplyButton\">Post Reply</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <NavBar />\r\n        <div className=\"page\">\r\n          <div className=\"postFeed\">\r\n            {this.state.postComp}\r\n            <div style={{marginTop: \"-1px\"}}>\r\n              <hr className=\"postReplyOptionsDivider2\"></hr>\r\n              {this.createReplies()}\r\n              <div className=\"replyFooter\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nPostPage.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps\r\n)(PostPage);"]},"metadata":{},"sourceType":"module"}